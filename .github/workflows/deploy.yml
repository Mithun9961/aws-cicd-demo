name: CI/CD Flask App via CloudFormation

on:
  push:
    branches:
      - main  # Run workflow on push to main branch

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest boto3

      # 4️⃣ Run tests
      - name: Run tests
        run: pytest

      # 5️⃣ Zip application
      - name: Zip application
        run: zip -r deploy.zip . -x "*.git*" "*.venv*" "__pycache__/*"

      # 6️⃣ Upload zip to S3
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws s3 cp deploy.zip s3://your-s3-bucket-name/deploy.zip

      # 7️⃣ Update CloudFormation stack
      - name: Update CloudFormation Stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws cloudformation deploy \
            --template-file iac/flask-app-cf.yml \
            --stack-name flask-login-stack \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
                S3BucketName=your-s3-bucket-name \
                S3Key=deploy.zip \
                VersionLabel=v-${{ github.run_number }}
